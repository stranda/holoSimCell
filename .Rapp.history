text(x = 98, y = 0.725, label = "80km")
text(x = 98, y = 0.675, label = "160km")
text(x = 98, y = 0.625, label = "320km")
par(mar = c(4,6,2,2))#
barplot(height= t(ms)[,reord], beside = TRUE, col = reordcolpal, xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)#
#
abline(v = 60.5, lwd = 2, lty = "dashed", col = "red")#
#legend("topright", fill = unique(mycolpal), legend = c("BRT-80km", "GLM-80km", "Maxent-80km", "NS-80km", "BRT-160km", "GLM-160km", "Maxent-160km", "NS-160km", "BRT-320km", "GLM-320km", "Maxent-320km", "NS-320km"), bty = "n", cex = 1.5)#
text(x = 55.5, y = 0.7, labels = "CCSM", cex = 1.5, font = 2)#
text(x = 65.5, y = 0.7, labels = "ECBilt", cex = 1.5, font = 2)#
#
rect(100, 0.7, 103, 0.75, col = ora[1])#
rect(100, 0.65, 103, 0.7, col = ora[2])#
rect(100, 0.6, 103, 0.65, col = ora[3])#
#
rect(104, 0.7, 107, 0.75, col = gre[1])#
rect(104, 0.65, 107, 0.7, col = gre[2])#
rect(104, 0.6, 107, 0.65, col = gre[3])#
#
rect(108, 0.7, 111, 0.75, col = blu[1])#
rect(108, 0.65, 111, 0.7, col = blu[2])#
rect(108, 0.6, 111, 0.65, col = blu[3])#
#
rect(112, 0.7, 115, 0.75, col = purp[1])#
rect(112, 0.65, 115, 0.7, col = purp[2])#
rect(112, 0.6, 115, 0.65, col = purp[3])#
#
text(x = 101.5, y = 0.765, label = "BRT", cex = 0.9)#
text(x = 105.5, y = 0.765, label = "GLM", cex = 0.9)#
text(x = 109.5, y = 0.765, label = "Maxent", cex = 0.9)#
text(x = 113.5, y = 0.765, label = "NS", cex = 0.9)#
#
text(x = 98, y = 0.725, label = "80km", cex = 0.9)#
text(x = 98, y = 0.675, label = "160km", cex = 0.9)#
text(x = 98, y = 0.625, label = "320km", cex = 0.9)
par(mar = c(4,6,2,2))
mycolpal <- c(mycolpal, mycolpal)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
abline(v = 60.5, lwd = 2, lty = "dashed", col = "red")
#legend("topright", fill = unique(mycolpal), legend = c("BRT-80km", "GLM-80km", "Maxent-80km", "NS-80km", "BRT-160km", "GLM-160km", "Maxent-160km", "NS-160km", "BRT-320km", "GLM-320km", "Maxent-320km", "NS-320km"), bty = "n", cex = 1.5)
text(x = 55.5, y = 0.7, labels = "CCSM", cex = 1.5, font = 2)
text(x = 65.5, y = 0.7, labels = "ECBilt", cex = 1.5, font = 2)
rect(100, 0.7, 103, 0.75, col = ora[1])
rect(100, 0.65, 103, 0.7, col = ora[2])
rect(100, 0.6, 103, 0.65, col = ora[3])
rect(104, 0.7, 107, 0.75, col = gre[1])
rect(104, 0.65, 107, 0.7, col = gre[2])
rect(104, 0.6, 107, 0.65, col = gre[3])
rect(108, 0.7, 111, 0.75, col = blu[1])
rect(108, 0.65, 111, 0.7, col = blu[2])
rect(108, 0.6, 111, 0.65, col = blu[3])
rect(112, 0.7, 115, 0.75, col = purp[1])
rect(112, 0.65, 115, 0.7, col = purp[2])
rect(112, 0.6, 115, 0.65, col = purp[3])
text(x = 101.5, y = 0.765, label = "BRT")
text(x = 105.5, y = 0.765, label = "GLM")
text(x = 109.5, y = 0.765, label = "Maxent")
text(x = 113.5, y = 0.765, label = "NS")
text(x = 98, y = 0.725, label = "80km")
text(x = 98, y = 0.675, label = "160km")
text(x = 98, y = 0.625, label = "320km")
par(mar = c(4,6,2,2))#
mycolpal <- c(mycolpal, mycolpal)#
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)#
abline(v = 60.5, lwd = 2, lty = "dashed", col = "red")#
#legend("topright", fill = unique(mycolpal), legend = c("BRT-80km", "GLM-80km", "Maxent-80km", "NS-80km", "BRT-160km", "GLM-160km", "Maxent-160km", "NS-160km", "BRT-320km", "GLM-320km", "Maxent-320km", "NS-320km"), bty = "n", cex = 1.5)#
text(x = 55.5, y = 0.7, labels = "CCSM", cex = 1.5, font = 2)#
text(x = 65.5, y = 0.7, labels = "ECBilt", cex = 1.5, font = 2)#
#
rect(100, 0.7, 103, 0.75, col = ora[1])#
rect(100, 0.65, 103, 0.7, col = ora[2])#
rect(100, 0.6, 103, 0.65, col = ora[3])#
#
rect(104, 0.7, 107, 0.75, col = gre[1])#
rect(104, 0.65, 107, 0.7, col = gre[2])#
rect(104, 0.6, 107, 0.65, col = gre[3])#
#
rect(108, 0.7, 111, 0.75, col = blu[1])#
rect(108, 0.65, 111, 0.7, col = blu[2])#
rect(108, 0.6, 111, 0.65, col = blu[3])#
#
rect(112, 0.7, 115, 0.75, col = purp[1])#
rect(112, 0.65, 115, 0.7, col = purp[2])#
rect(112, 0.6, 115, 0.65, col = purp[3])#
#
text(x = 101.5, y = 0.765, label = "BRT", cex = 0.9)#
text(x = 105.5, y = 0.765, label = "GLM", cex = 0.9)#
text(x = 109.5, y = 0.765, label = "Maxent", cex = 0.9)#
text(x = 113.5, y = 0.765, label = "NS", cex = 0.9)#
#
text(x = 98, y = 0.725, label = "80km", cex = 0.9)#
text(x = 98, y = 0.675, label = "160km", cex = 0.9)#
text(x = 98, y = 0.625, label = "320km", cex = 0.9)
?barplot
angle <- c(0, 45, 90, 180)
angle <- rep(angle, 24)
density <- rep(20, 24)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2, angle = angle, density = density)
angle <- 45
density <- rep(c(0, 10, 20, 30),24)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2, angle = angle, density = density)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
angle <- c(0,45,90,180)
density <- rep(c(0, 10, 20, 30),24)
angle <- rep(c(0,45,90,180),24)
density <- rep(c(0, 10, 20, 30),24)
mycolpal <- c(mycolpal, mycolpal)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
angle <- rep(c(0,45,180,225),24)
density <- rep(c(0, 10, 20, 30),24)
#Version #1
par(mar = c(4,6,2,2))
mycolpal <- c(mycolpal, mycolpal)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
angle <- rep(c(0,45,180,135),24)
density <- rep(c(0, 10, 20, 30),24)
#Version #1
par(mar = c(4,6,2,2))
mycolpal <- c(mycolpal, mycolpal)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
angle <- rep(c(0,45,180,135),24)
density <- rep(c(0, 10, 10, 10),24)
#Version #1
par(mar = c(4,6,2,2))
mycolpal <- c(mycolpal, mycolpal)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
angle <- rep(c(0,45,45,45),24)
density <- rep(c(0, 10, 20, 30),24)
#Version #1
par(mar = c(4,6,2,2))
mycolpal <- c(mycolpal, mycolpal)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
?rect
rect(100, 0.53, 103, 0.58)
rect(104, 0.53, 107, 0.58, angle = 45, density = 10)
rect(108, 0.53, 111, 0.58, angle = 45, density = 20)
rect(112, 0.53, 115, 0.58, angle = 45, density = 30)
t(ms)
text(x = 101.5, y = 0.5, label = "rej.", cex = 0.9)
text(x = 105.5, y = 0.5, label = "mnlog", cex = 0.9)
text(x = 109.5, y = 0.5, label = "nnet", cex = 0.9)
text(x = 113.5, y = 0.5, label = "rf", cex = 0.9)
#Version #1#
par(mar = c(4,6,2,2))#
mycolpal <- c(mycolpal, mycolpal)#
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)#
barplot(height= t(ms), add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)#
abline(v = 60.5, lwd = 2, lty = "dashed", col = "red")#
#legend("topright", fill = unique(mycolpal), legend = c("BRT-80km", "GLM-80km", "Maxent-80km", "NS-80km", "BRT-160km", "GLM-160km", "Maxent-160km", "NS-160km", "BRT-320km", "GLM-320km", "Maxent-320km", "NS-320km"), bty = "n", cex = 1.5)#
text(x = 55.5, y = 0.7, labels = "CCSM", cex = 1.5, font = 2)#
text(x = 65.5, y = 0.7, labels = "ECBilt", cex = 1.5, font = 2)#
#
rect(100, 0.7, 103, 0.75, col = ora[1])#
rect(100, 0.65, 103, 0.7, col = ora[2])#
rect(100, 0.6, 103, 0.65, col = ora[3])#
#
rect(104, 0.7, 107, 0.75, col = gre[1])#
rect(104, 0.65, 107, 0.7, col = gre[2])#
rect(104, 0.6, 107, 0.65, col = gre[3])#
#
rect(108, 0.7, 111, 0.75, col = blu[1])#
rect(108, 0.65, 111, 0.7, col = blu[2])#
rect(108, 0.6, 111, 0.65, col = blu[3])#
#
rect(112, 0.7, 115, 0.75, col = purp[1])#
rect(112, 0.65, 115, 0.7, col = purp[2])#
rect(112, 0.6, 115, 0.65, col = purp[3])#
#
text(x = 101.5, y = 0.765, label = "BRT", cex = 0.9)#
text(x = 105.5, y = 0.765, label = "GLM", cex = 0.9)#
text(x = 109.5, y = 0.765, label = "Maxent", cex = 0.9)#
text(x = 113.5, y = 0.765, label = "NS", cex = 0.9)#
#
text(x = 98, y = 0.725, label = "80km", cex = 0.9)#
text(x = 98, y = 0.675, label = "160km", cex = 0.9)#
text(x = 98, y = 0.625, label = "320km", cex = 0.9)#
#
rect(100, 0.53, 103, 0.58)#
rect(104, 0.53, 107, 0.58, angle = 45, density = 10)#
rect(108, 0.53, 111, 0.58, angle = 45, density = 20)#
rect(112, 0.53, 115, 0.58, angle = 45, density = 30)#
#
text(x = 101.5, y = 0.5, label = "rej.", cex = 0.9)#
text(x = 105.5, y = 0.5, label = "mnlog", cex = 0.9)#
text(x = 109.5, y = 0.5, label = "nnet", cex = 0.9)#
text(x = 113.5, y = 0.5, label = "rf", cex = 0.9)
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)
barplot(height= t(ms), axes = FALSE, add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)
#Version #1#
par(mar = c(4,6,2,2))#
mycolpal <- c(mycolpal, mycolpal)#
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2)#
barplot(height= t(ms), axes = FALSE, add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)#
abline(v = 60.5, lwd = 2, lty = "dashed", col = "red")#
#legend("topright", fill = unique(mycolpal), legend = c("BRT-80km", "GLM-80km", "Maxent-80km", "NS-80km", "BRT-160km", "GLM-160km", "Maxent-160km", "NS-160km", "BRT-320km", "GLM-320km", "Maxent-320km", "NS-320km"), bty = "n", cex = 1.5)#
text(x = 55.5, y = 0.7, labels = "CCSM", cex = 1.5, font = 2)#
text(x = 65.5, y = 0.7, labels = "ECBilt", cex = 1.5, font = 2)#
#
rect(100, 0.7, 103, 0.75, col = ora[1])#
rect(100, 0.65, 103, 0.7, col = ora[2])#
rect(100, 0.6, 103, 0.65, col = ora[3])#
#
rect(104, 0.7, 107, 0.75, col = gre[1])#
rect(104, 0.65, 107, 0.7, col = gre[2])#
rect(104, 0.6, 107, 0.65, col = gre[3])#
#
rect(108, 0.7, 111, 0.75, col = blu[1])#
rect(108, 0.65, 111, 0.7, col = blu[2])#
rect(108, 0.6, 111, 0.65, col = blu[3])#
#
rect(112, 0.7, 115, 0.75, col = purp[1])#
rect(112, 0.65, 115, 0.7, col = purp[2])#
rect(112, 0.6, 115, 0.65, col = purp[3])#
#
text(x = 101.5, y = 0.765, label = "BRT", cex = 0.9)#
text(x = 105.5, y = 0.765, label = "GLM", cex = 0.9)#
text(x = 109.5, y = 0.765, label = "Maxent", cex = 0.9)#
text(x = 113.5, y = 0.765, label = "NS", cex = 0.9)#
#
text(x = 97.8, y = 0.725, label = "80km", cex = 0.9)#
text(x = 97.8, y = 0.675, label = "160km", cex = 0.9)#
text(x = 97.8, y = 0.625, label = "320km", cex = 0.9)#
#
rect(100, 0.53, 103, 0.58)#
rect(104, 0.53, 107, 0.58, angle = 45, density = 10)#
rect(108, 0.53, 111, 0.58, angle = 45, density = 20)#
rect(112, 0.53, 115, 0.58, angle = 45, density = 30)#
#
text(x = 101.5, y = 0.5, label = "rej.", cex = 0.9)#
text(x = 105.5, y = 0.5, label = "mnlog", cex = 0.9)#
text(x = 109.5, y = 0.5, label = "nnet", cex = 0.9)#
text(x = 113.5, y = 0.5, label = "rf", cex = 0.9)
?barplot
par(mar = c(4,6,2,2))#
mycolpal <- c(mycolpal, mycolpal)#
barplot(height= t(ms), beside = TRUE, col = mycolpal, names = c(1:24), xlab = "SDM", ylab = "Posterior Probability", cex.axis = 1.5, cex.lab = 2, cex.names = 1.5)#
barplot(height= t(ms), axes = FALSE, add = TRUE, beside = TRUE, col = "black", angle = angle, density = density)#
abline(v = 60.5, lwd = 2, lty = "dashed", col = "red")#
#legend("topright", fill = unique(mycolpal), legend = c("BRT-80km", "GLM-80km", "Maxent-80km", "NS-80km", "BRT-160km", "GLM-160km", "Maxent-160km", "NS-160km", "BRT-320km", "GLM-320km", "Maxent-320km", "NS-320km"), bty = "n", cex = 1.5)#
text(x = 55.5, y = 0.7, labels = "CCSM", cex = 1.5, font = 2)#
text(x = 65.5, y = 0.7, labels = "ECBilt", cex = 1.5, font = 2)#
#
rect(100, 0.7, 103, 0.75, col = ora[1])#
rect(100, 0.65, 103, 0.7, col = ora[2])#
rect(100, 0.6, 103, 0.65, col = ora[3])#
#
rect(104, 0.7, 107, 0.75, col = gre[1])#
rect(104, 0.65, 107, 0.7, col = gre[2])#
rect(104, 0.6, 107, 0.65, col = gre[3])#
#
rect(108, 0.7, 111, 0.75, col = blu[1])#
rect(108, 0.65, 111, 0.7, col = blu[2])#
rect(108, 0.6, 111, 0.65, col = blu[3])#
#
rect(112, 0.7, 115, 0.75, col = purp[1])#
rect(112, 0.65, 115, 0.7, col = purp[2])#
rect(112, 0.6, 115, 0.65, col = purp[3])#
#
text(x = 101.5, y = 0.765, label = "BRT", cex = 0.9)#
text(x = 105.5, y = 0.765, label = "GLM", cex = 0.9)#
text(x = 109.5, y = 0.765, label = "Maxent", cex = 0.9)#
text(x = 113.5, y = 0.765, label = "NS", cex = 0.9)#
#
text(x = 97.8, y = 0.725, label = "80km", cex = 0.9)#
text(x = 97.8, y = 0.675, label = "160km", cex = 0.9)#
text(x = 97.8, y = 0.625, label = "320km", cex = 0.9)#
#
rect(100, 0.53, 103, 0.58)#
rect(104, 0.53, 107, 0.58, angle = 45, density = 10)#
rect(108, 0.53, 111, 0.58, angle = 45, density = 20)#
rect(112, 0.53, 115, 0.58, angle = 45, density = 30)#
#
text(x = 101.5, y = 0.5, label = "rej.", cex = 0.9)#
text(x = 105.5, y = 0.5, label = "mnlog", cex = 0.9)#
text(x = 109.5, y = 0.5, label = "nnet", cex = 0.9)#
text(x = 113.5, y = 0.5, label = "rf", cex = 0.9)
1/28
1/30
1/1600
1/32
1/33
1/34
1/36
mat <- matrix(data = c(1:9), ncol = 3)
mat
col(mat)
row(mat)
2/150
library(ape)
?distDNA
?dist.dna
31*31
citation(package = "maxnet")
samp <- c(37,80,123,33,240,51,21,122,29,185,444,37,53,86,35,105,38,92,35,8)
LD <- c(3,62,57,68,33,7,0.2, 38,7,144,228,9,249,106,33,7,2,50.2,17.9, 34.6)
nc <- c(11301,1654,1097,36558,1637,NA,2124,NA,10420,7219,4705,18,NA,4813,9066,NA,NA,3974,NA,NA)
length(samp)
length(LD)
length(nc)
mydf <- data.frarme(samp,LD,nc)
mydf <- data.frame(samp,LD,nc)
mydf
cor1df <- mydf[!is.na(mydf$nc),]
cor2df <- cor1df[cor1df$samp >= 50,]
cor1df
cor2df
cor.test(cor1df)
cor.test(cor1df$LD,cor1df$nc)
cor.test(cor1df$LD,cor1df$nc, method = "spearman")
cor.test(cor2df$LD,cor2df$nc)
cor.test(cor2df$LD,cor2df$nc, method = "spearman")
plot(cor2df$LD,cor2df$nc)
16/9
24/18
700/20
16/9
48/27
48/36
one <- runif(100)
two <- runif(100)
list.files()
save(one, two, file = "~/Desktop/hSC_testing/test.Rdata")
?save
save(one, two, file = "~/Desktop/hSC_testing/test.Rdata", overwrite =T)
save(one, two, three, file = "~/Desktop/hSC_testing/test.Rdata", overwrite =T)
three <- one
four <- one
five <- two
six <- two
seven <- one
eight <- two
nine <- one
ten <- two
eleven <- one
save(one, two, three, four, five, six, seven, eight, nine, ten, eleven, file = )
save(one, two, three, four, five, six, seven, eight, nine, ten, eleven, file = "~/Desktop/hSC_testing/test2.Rdata", overwrite = T)
42*(9/16)
42/23.625
16/9
48/36
42*(36/48)
42/31.5
log2(100)
log2(1000)
31*31
library(tidyverse)
?separate
8/0.13
33023.37+14329.69
DNA <- c(3128,1078,365,16422)
DNA*4
exp(-5)
exp(-10)
8.4*4
(26*26)/2
(26*25)/2
sqrt(10*0.25)
sqrt(100*0.25)
(100/2-90)/5
(10/2-9)/1.581139
61300-2800
2800*0.05
61300-2940
library(holoSimCell)
devtools::install_github('stranda/holoSimCell')
Sys.unsetenv("GITHUB_PAT")
devtools::install_github('stranda/holoSimCell')
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE)
devtools::install_github('stranda/holoSimCell')
devtools::install_github('adamlilith/omnibus')
Sys.unsetenv("GITHUB_PAT")
devtools::install_github('adamlilith/omnibus')
devtools::install_github('stranda/holoSimCell')
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE)
devtools::install_github('stranda/holoSimCell')
library(holoSimCell)
?drawParms
?ashSetupLandscape
?testPophist
?drawParms
?chooseRefugeCells
rs <- raster::brick(paste0(system.file("extdata","rasters",package="holoSimCell"),"/","study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif"))#
chooseRefugeCells(rs[[1]])
?holoStats
modchoice <- 1#
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))
landscape$sumrast
chooseRefugeCells(landscape$sumrast)
modchoice <- 1#
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))
landscape$sumrast
parms <- drawParms(control = system.file("extdata/ashpaper","Ash_priors.csv",package="holoSimCell"))#
modchoice <- 1#
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))#
refpops <- pollenPulls[[modchoice]]$refs#
avgCellsz <- mean(c(res(landscape$sumrast)))
library(holoSimCell)
?holoStats
parms <- drawParms(control = system.file("extdata/ashpaper","Ash_priors.csv",package="holoSimCell"))#
modchoice <- 1#
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))#
refpops <- pollenPulls[[modchoice]]$refs#
avgCellsz <- mean(c(res(landscape$sumrast)))#
#
ph = getpophist2.cells(h = landscape$details$ncells, xdim = landscape$details$x.dim, ydim = landscape$details$y.dim,#
                       hab_suit=landscape,#
                       refs=refpops,   #
                       refsz=parms$ref_Ne,#
                       lambda=parms$lambda,#
                       mix=parms$mix,  #
                       shortscale=parms$shortscale*avgCellsz,  #
                       shortshape=parms$shortshape, #
                       longmean=parms$longmean*avgCellsz,  #
                       ysz=res(landscape$sumrast)[2], #
                       xsz=res(landscape$sumrast)[1], #
                       K = parms$Ne)
plotHistSlice(20, ph, landscape)
plotCellsOnSuit(1242, landscape, timeslice = 20)
plotCellsOnSuit(1242, landscape, timeslice = 200)
plotCellsOnSuit(1242, landscape, timeslice = 242)
parms <- drawParms(control = system.file("extdata/ashpaper","Ash_priors.csv",package="holoSimCell"))
modchoice <- 1
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))
refpops <- pollenPulls[[modchoice]]$refs
plotCellsOnSuit(refpops, landscape, timeslice = 1)
devtools::install_github('stranda/holoSimCell')
Sys.unsetenv(GITHUB_PAT)
Sys.unsetenv("GITHUB_PAT")
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE)
devtools::install_github('stranda/holoSimCell')
library(holoSimCell)
?drawParms
?plotHistSlice
parms <- drawParms(control = system.file("extdata/ashpaper","Ash_priors.csv",package="holoSimCell"))
modchoice <- 1
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))
refpops <- pollenPulls[[modchoice]]$refs
avgCellsz <- mean(c(res(landscape$sumrast)))
ph = getpophist2.cells(h = landscape$details$ncells, xdim = landscape$details$x.dim, ydim = landscape$details$y.dim,#
                       hab_suit=landscape,#
                       refs=refpops,   #
                       refsz=parms$ref_Ne,#
                       lambda=parms$lambda,#
                       mix=parms$mix,  #
                       shortscale=parms$shortscale*avgCellsz,  #
                       shortshape=parms$shortshape, #
                       longmean=parms$longmean*avgCellsz,  #
                       ysz=res(landscape$sumrast)[2], #
                       xsz=res(landscape$sumrast)[1], #
                       K = parms$Ne)
gmap=make.gmap(ph$pophist,#
               xnum=2, #number of cells to aggregate in x-direction#
               ynum=2) #number of aggregate in the y-direction
ph2 <- pophist.aggregate(ph,gmap=gmap)
loc_parms <- data.frame(marker = "snp",#
                        nloci = parms$nloci,           #
                        seq_length = parms$seq_length,#
                        mu = parms$mu)
preLGMparms <- data.frame(preLGM_t = parms$preLGM_t/parms$G,   #
                          preLGM_Ne = parms$preLGM_Ne,#
                         ref_Ne = parms$ref_Ne)
out <- runFSC_step_agg3(ph = ph2,#
                        l = landscape,#
                        sample_n = 14,#
                        preLGMparms = preLGMparms,#
                        label = "test",#
                        delete_files = TRUE,#
                        num_cores = 1,#
                        exec = "fsc26",#
                        loc_parms = loc_parms,#
                        found_Ne = parms$found_Ne,#
                        gmap = gmap,#
                        MAF = 0.01,#
                        maxloc = 50000)
popDF <- makePopdf(landscape,"cell")
stats <- holoStats(out, popDF, cores = 1)
stats
library(holoSimCell)
?transSampLoc
transSampLoc
?newLandscapeDim
ls("package:holoSimCell")
library(holoSimcell)
library(holoSimCell)
ls("package:holoSimCell")
setwd("~/Desktop/GitHub/holoSimCell")
devtools::document()
?ashSetupLandscape
