barplot(t(as.matrix(matrix[,-1])))
dim(matrix)
?palette
palette("R3")
barplot(t(as.matrix(matrix[,-1])))
palette("Okabe-Ito"); sinplot("Okabe-Ito")
barplot(t(as.matrix(matrix[,-1])), col = palette("ggplot2"))
library(RColorBrewer)
help(package = "RColorBrewer")
display.brewer.pal()
display.brewer.all()
brewer.pal(ncol(matrix[,-1]), "Spectral")
library(grDevices)
rainbow(n = ncol(matrix[,-1]))
barplot(t(as.matrix(matrix[,-1])), col = grDevices::rainbow(n = ncol(matrix[,-1])))
barplot(t(as.matrix(matrix[,-1])), col = grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.5))
barplot(t(as.matrix(matrix[,-1])), col = grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6))
legend("topleft", ncol = 4, cex = 0.75, legend = colnames(matrix[,-1]), fill = rainbow(n = ncol(matrix[,-1]), alpha = 0.6))
barplot(t(as.matrix(matrix[,-1])), col = grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6))
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1]), fill = rainbow(n = ncol(matrix[,-1]), alpha = 0.6))
barplot(t(as.matrix(matrix[,-1])), col = grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6))li
library(colorRamps)
matlab.like2(26)
matlab.like2(26, alpha = 0.6)
barplot(t(as.matrix(matrix[,-1])), col = mypal, xlab = matrix$Sample)
mypal <- colorRamps::matlab.like2(ncol(matrix[,-1])))
barplot(t(as.matrix(matrix[,-1])), col = mypal, xlab = matrix$Sample)
mypal <- colorRamps::matlab.like2(ncol(matrix[,-1])))
mypal <- colorRamps::matlab.like2(ncol(matrix[,-1]))
barplot(t(as.matrix(matrix[,-1])), col = mypal, xlab = matrix$Sample)
mypal <- colorRamps::matlab.like2(ncol(matrix[,-1]))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, xlab = matrix$Sample)
mypal <- colorRamps::matlab.like2(ncol(matrix[,-1]))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = matrix$Sample, las = 3)
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = matrix$Sample, las = 3)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
mypal <- rev(grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = matrix$Sample, las = 3)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "white"
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = matrix$Sample, las = 3)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
par(mar = c(10,5,2,2))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = gsub(".12S","",matrix$Sample), las = 3, cex.lab = 0.7)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
matrix[matrix$Sample == "25_NoBlock_HP5.12S",]
par(mar = c(10,5,2,2))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = gsub(".12S","",matrix$Sample), las = 3, cex.axis = 0.7)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
par(mar = c(10,5,2,2))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = xlabels, las = 3, cex.axis = 0.7)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
info
library(tidyverse)
library(readxl)
options(scipen = 999)  # removing scientific notation
matrix <- read_excel("./Output/12S_SL_BP_Micro.mothur.community.matrix.xls")
head(matrix)
# change name of first column to indicate the sample
colnames(matrix)[1] <- "Sample"
extraction <- sapply(matrix$Sample, FUN = function(x){tail(strsplit(x,split = "_")[[1]],1)})
matrix <- matrix[order(extraction),]
matrix
par(mar = c(10,5,2,2))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = xlabels, las = 3, cex.axis = 0.7)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
legend("topright", ncol = 1, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
?order
cycles <- sapply(matrix$Sample, FUN = function(x){strsplit(x,split = "_")[[1]][1]})
cycles
library(tidyverse)
library(readxl)
options(scipen = 999)  # removing scientific notation
matrix <- read_excel("./Output/12S_SL_BP_Micro.mothur.community.matrix.xls")
head(matrix)
# change name of first column to indicate the sample
colnames(matrix)[1] <- "Sample"
cycles <- sapply(matrix$Sample, FUN = function(x){strsplit(x,split = "_")[[1]][1]})
extraction <- sapply(matrix$Sample, FUN = function(x){tail(strsplit(x,split = "_")[[1]],1)})
matrix <- matrix[order(cycles,extraction),]
par(mar = c(10,5,2,2))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = xlabels, las = 3, cex.axis = 0.7)
legend("topleft", ncol = 3, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
legend("topright", ncol = 1, cex = 0.75, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
legend("topright", ncol = 1, cex = 0.5, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = xlabels, las = 3, cex.label = 0.7)
?barplot
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = xlabels, las = 3, cex.names = 0.7)
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), col = mypal, names = xlabels, las = 3, cex.names = 0.8)
legend("topright", ylab = "Sequence Reads", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
?par
par(mar = c(10,5,2,2), fin = c(12,6))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
par(mar = c(10,5,2,2), fin = c(12,6))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
library(tidyverse)
library(readxl)
options(scipen = 999)  # removing scientific notation
#matrix <- read_excel("./Output/12S_SL_BP_Micro.mothur.community.matrix.xls")
matrix <- read_excel("~/Downloads/12S_SL_BP_Micro.mothur.community.matrix.xls")
head(matrix)
# change name of first column to indicate the sample
colnames(matrix)[1] <- "Sample"
cycles <- sapply(matrix$Sample, FUN = function(x){strsplit(x,split = "_")[[1]][1]})
extraction <- sapply(matrix$Sample, FUN = function(x){tail(strsplit(x,split = "_")[[1]],1)})
matrix <- matrix[order(cycles,extraction),]
par(mar = c(10,5,2,2), fin = c(12,6))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
#The plot is very wide... probably needs to be the width of your screen
par(mar = c(10,5,2,2))
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)
dev.size()
pdf("Barplot_12Sbp_NanoRun.pdf", height = 10, width = 24)#
par(mar = c(10,5,2,2))#
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)#
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])#
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"#
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"#
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))#
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)#
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)#
dev.off()
pdf("Barplot_12Sbp_MicroRun.pdf", height = 10, width = 24)#
par(mar = c(10,5,2,2))#
mypal <- grDevices::rainbow(n = ncol(matrix[,-1]), alpha = 0.6)#
mylabs <- colnames(matrix[,-1][,order(colnames(matrix[,-1]))])#
mypal[mylabs == "Petromyzontidae_unclassified"] <- "black"#
mypal[mylabs == "Salvelinus_namaycush"] <- "grey"#
xlabels <- gsub(".12S","",gsub("PMBlock_", "", matrix$Sample))#
barplot(t(as.matrix(matrix[,-1][,order(colnames(matrix[,-1]))])), ylab = "Sequence Reads", col = mypal, names = xlabels, las = 3, cex.names = 0.8)#
legend("topright", ncol = 1, cex = 0.65, bty = "n", legend = colnames(matrix[,-1][,order(colnames(matrix[,-1]))]), fill = mypal)#
dev.off()
3618-2
3616/2
library(strataG)
?numAlleles
numAlleles
load("landscapes.rds")
read.csv("landscapes.rds", header = TRUE)
tmp <- read.table("landscapes.rds")
tmp[1:10,]
tmp
tmp[1,]
tmp[2,]
tmp[3,]
tmp[4,]
tmp[5,]
tmp[1:10,]
head(tmp)
library(raster)
tmp <- brick("landscapes.rds")
setwd("~/Downloads")
load("landscapes.rds")
readRDS("landscapes.rds")
tmp <- readRDS("landscapes.rds")
tmp[1:10,]
tmp[1,]
tmp[1]
str(tmp)
tmp$arid[1:10,]
setwd("~/Desktop")
tmp2 <- load("landscapes.rds")
tmp2 <- readRDS("landscapes.rds")
str(tmp2)
tmp2$arid[1:10,]
names(tmp2)
tmp2$prec[1:10,]
tmp2$prec[1:1000,1100:1200]
rowSums(is.na(tmp2$prec))
colSums(is.na(tmp2$prec))
names(tmp2)
mat<- matrix(data = NA, nrow = 10, ncol = 10)
length(mat)
?apply
tidyverse::str_pad(c(1:1000), width = 5, side = "left", pad = "0")
library(stringr)
str_pad(c(1:1000), width = 5, side = "left", pad = "0")
str_pad(c(1:1000), width = 5, side = "left", pad = "0") -> tmp
paste0(tmp, c(".1",".2"))
?paste
rep(tmp,2)
sort(rep(tmp,2))
c(“id”, “deme”, paste0(“C”, sort(rep(str_pad(c(1:nloci), width = 5, side = “left”, pad = “0”), 2)), “B1_SNP”, c(“.1”,”.2”)))
c("id", "deme", paste0("C",sort(rep(str_pad(c(1:1808), width = 5, side = "left", pad = "0"), 2)), "B1_SNP", c(".1", ".2")))
tmp <- c(0,1,1,1,0,1,1,1,NA,NA)
tmp-1
tmp-1*-1
-1*(tmp-1)
tmp
library(igraph)
?closeness
?betweenness
read.csv(textConnection(tmp), header = TRUE)
?textConnection
library(popgraph)
?read_population
library(gstudio)
?read_population
?to_mv
?read_population
946+450+619+591+253+118+776
setwd("~/Desktop/GitHub/holoSimCell")
devtools::document()
?holoStats
?def_grid_pred
def_grid_pred()
parms <- drawParms(control = system.file("extdata/ashpaper","Ash_priors.csv",package="holoSimCell"))#
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[1]]$file))#
refpops <- pollenPulls[[1]]$refs#
avgCellsz <- mean(c(res(landscape$sumrast)))#
#
ph = getpophist2.cells(h = landscape$details$ncells, xdim = landscape$details$x.dim, ydim = landscape$details$y.dim,#
                       landscape=landscape,#
                       refs=refpops,   #
                       refsz=parms$ref_Ne,#
                       lambda=parms$lambda,#
                       mix=parms$mix,  #
                       shortscale=parms$shortscale*avgCellsz,  #
                       shortshape=parms$shortshape, #
                       longmean=parms$longmean*avgCellsz,  #
                       ysz=res(landscape$sumrast)[2], #
                       xsz=res(landscape$sumrast)[1], #
                       K = parms$Ne) #
#
gmap=make.gmap(ph$pophist,#
               xnum=2, #number of cells to aggregate in x-direction#
               ynum=2) #number of aggregate in the y-direction#
#
ph2 <- pophist.aggregate(ph,gmap=gmap)#
#
loc_parms <- data.frame(marker = "snp",#
                        nloci = parms$nloci,           #
                        seq_length = parms$seq_length,#
                        mu = parms$mu)#
preLGMparms <- data.frame(preLGM_t = parms$preLGM_t/parms$G,   #
                          preLGM_Ne = parms$preLGM_Ne,#
                         ref_Ne = parms$ref_Ne)#
#
out <- runFSC_step_agg3(ph = ph2,#
                        l = landscape,#
                        sample_n = 14,#
                        preLGMparms = preLGMparms,#
                        label = "test",#
                        delete_files = TRUE,#
                        num_cores = 1,#
                        exec = "fsc26",#
                        loc_parms = loc_parms,#
                        found_Ne = parms$found_Ne,#
                        gmap = gmap,#
                        MAF = 0.01,#
                        maxloc = 50000)#
popDF <- makePopdf(landscape,"cell")#
#
stats <- holoStats(out, popDF, cores = 1)
