% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testph.R
\name{testPophist}
\alias{testPophist}
\title{Test pophist object before coalescent simulation}
\usage{
testPophist(ph, landscape)
}
\arguments{
\item{ph}{a pophist object, output by getpophist2.cells()}

\item{landscape}{the landscape object used in the forward simulation}
}
\value{
Returns a logical (T or F) indicating whether all sampled cells are occupied at the end of the forward simulation.
}
\description{
Function to take output from getpophist_cells and def_grid and test for cell occupancy
}
\details{
All cells with population genetic samples must be colonized during the forward simulation.  Simulations that do not fully colonize sampled populations are discarded.
}
\examples{
library(holoSimCell)
parms <- drawParms(control = system.file("extdata/ashpaper","Ash_priors.csv",package="holoSimCell"))
modchoice <- 1
load(file=paste0(system.file(package="holoSimCell"),"/extdata/landscapes/",pollenPulls[[modchoice]]$file))
refpops <- pollenPulls[[modchoice]]$refs
avgCellsz <- mean(c(res(landscape$sumrast)))

ph = getpophist2.cells(h = landscape$details$ncells, xdim = landscape$details$x.dim, ydim = landscape$details$y.dim,
                       hab_suit=landscape,
                       refs=refpops,   
                       refsz=parms$ref_Ne,
                       lambda=parms$lambda,
                       mix=parms$mix,  
                       shortscale=parms$shortscale*avgCellsz,  
                       shortshape=parms$shortshape, 
                       longmean=parms$longmean*avgCellsz,  
                       ysz=res(landscape$sumrast)[2], 
                       xsz=res(landscape$sumrast)[1], 
                       K = parms$Ne) 
testPophist(ph, landscape)

}
